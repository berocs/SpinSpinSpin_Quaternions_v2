function                                                                     ...
[                                                                            ...
  vectorProductResult                                                        ...
] =                                                                          ...
vectorProduct                                                                ...
      (                                                                      ...
        inputVector1,                                                        ...
        inputVector2                                                         ...
      )
%===============================================================================
%|
%| UNCLASSIFIED
%|
%|==============================================================================
%|
%| FUNCTION:
%|
%|   vectorProduct
%|
%|------------------------------------------------------------------------------
%|
%| PURPOSE:
%|
%|   This function will compute the vector product of the specified
%|   two input one dimensional vectors of length 3.
%|
%|------------------------------------------------------------------------------
%|
%| INPUT(s):
%|
%|   inputVector1
%|     The first  input one dimensional vector of length 3.
%|
%|   inputVector2
%|     The second input one dimensional vector of length 3.
%|
%|------------------------------------------------------------------------------
%|
%| OUTPUT(s):
%|
%|   vectorProductResult
%|     The vector product result as a one dimensional vector of length 3.
%|
%|------------------------------------------------------------------------------
%|
%| ASSUME:
%|
%|   [ 1 ]  The input vectors are either both row or both column vectors of
%|          length 3.
%|
%|   [ 2 ]  Output will be a column vector.
%|
%|------------------------------------------------------------------------------
%|
%| USAGE:
%|
%|   [                                  ...
%|     vectorProductResult              ...
%|   ] = vectorProduct                  ...
%|             (                        ...
%|               dataOrientation,       ...
%|               inputVector1,          ...
%|               inputVector2           ...
%|             );
%|
%|==============================================================================
%|
%| UNCLASSIFIED
%|
%===============================================================================


%===============================================================================
%        1         2         3         4         5         6         7         8
%2345678901234567890123456789012345678901234567890123456789012345678901234567890
%===============================================================================


%{------------------------------------------------------------------------------
   expectedNumberInputArgs  = 2;
   expectedNumberOutputArgs = 1;
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   actualNumberInputArgs    = nargin;
   actualNumberOutputArgs   = nargout;
%-------------------------------------------------------------------------------
%  Check number of input arguments.
%-------------------------------------------------------------------------------
   if( actualNumberInputArgs == expectedNumberInputArgs )
    %{--------------------------------------------------------------------------
    %  Encountered expected number of input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Check number of output arguments.
    %---------------------------------------------------------------------------
       if( actualNumberOutputArgs == expectedNumberOutputArgs )
        %{----------------------------------------------------------------------
        %  Encountered expected number of input arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Perform the vector product. 
        %-----------------------------------------------------------------------
           iv11 = inputVector1( 1 );
           iv12 = inputVector1( 2 );
           iv13 = inputVector1( 3 );
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           iv21 = inputVector2( 1 );
           iv22 = inputVector2( 2 );
           iv23 = inputVector2( 3 );
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           vectorProductResult = [                                           ...
                                   (                                         ...
                                      (  iv12 * iv23 ) + ( -iv13 * iv22 )    ...
                                   );                                        ...
                                  -(                                         ...
                                      (  iv11 * iv23 ) + ( -iv13 * iv21 )    ...
                                   );                                        ...
                                   (                                         ...
                                      (  iv11 * iv22 ) + ( -iv12 * iv21 )    ...
                                   )                                         ...
                                 ];
        %}----------------------------------------------------------------------
       else
        %{----------------------------------------------------------------------
        %  Encountered unexpected number of output arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  This is an error.
        %  Generate a  purpose message.
        %-----------------------------------------------------------------------
           STDOUT       = 1;
           functionName = mfilename;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           [                                                                 ...
             purposeMessageString                                            ...
           ] = generatePurposeMessage                                        ...
                       (                                                     ...
                         functionName                                        ...
                       );
        %-----------------------------------------------------------------------
        %  Generate an usage   message.
        %-----------------------------------------------------------------------
           [                                                                 ...
             usageMessageString                                              ...
           ] = generateUsageMessage                                          ...
                       (                                                     ...
                         functionName                                        ...
                       );
        %-----------------------------------------------------------------------
        %  Output a  purpose message.
        %-----------------------------------------------------------------------
           fprintf                                                           ...
             (                                                               ...
               STDOUT,                                                       ...
               '%s',                                                         ...
               purposeMessageString                                          ...
             );
        %-----------------------------------------------------------------------
        %  Output an usage   message.
        %-----------------------------------------------------------------------
           fprintf                                                           ...
             (                                                               ...
               STDOUT,                                                       ...
               '%s',                                                         ...
               usageMessageString                                            ...
             );
        %-----------------------------------------------------------------------
        %  Generate an error message.
        %-----------------------------------------------------------------------
           errorMessageFormattingString =                                    ...
                [                                                            ...
                  '\n\n\n'                                                   ...
                  '%s\n%s\n%s\n%s\n'                                         ...
                  '%s%s%s\n'                                                 ...
                  '%s\n%s\n%s\n'                                             ...
                  '%s%d\n'                                                   ...
                  '%s%d\n'                                                   ...
                  '%s\n%s\n%s\n%s\n%s\n'                                     ...
                  '\n\n\n'                                                   ...
                ];
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           fprintf                                                           ...
           (                                                                 ...
             STDOUT,                                                         ...
             errorMessageFormattingString,                                   ...
             '------------------------------------------------------------', ...
             '|',                                                            ...
             '| ERROR:',                                                     ...
             '|',                                                            ...
             '|   Function "',                                               ...
             functionName,                                                   ...
             '"',                                                            ...
             '|',                                                            ...
             '|   Encountered unexpected number of output arguments.',       ...
             '|',                                                            ...
             '|   Expected number output arguments:-->',                     ...
             expectedNumberOutputArgs,                                       ...
             '|   Actual   number output arguments:-->',                     ...
             actualNumberOutputArgs,                                         ...
             '|',                                                            ...
             '|  This is an error.',                                         ...
             '|  The program will terminate.',                               ...
             '|',                                                            ...
             '------------------------------------------------------------'  ...
           );
        %-----------------------------------------------------------------------
           vectorProductResult = [ ];
        %-----------------------------------------------------------------------
        %  Terminate the program.
        %-----------------------------------------------------------------------
           error( 'Encountered unexpected number of output arguments.' );
        %}----------------------------------------------------------------------
       end;
    %}--------------------------------------------------------------------------
   else
    %{--------------------------------------------------------------------------
    %  Encountered unexpected number of input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  This is an error.
    %  Generate a  purpose message.
    %---------------------------------------------------------------------------
       STDOUT       = 1;
       functionName = mfilename;
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       [                                                                     ...
         purposeMessageString                                                ...
       ] = generatePurposeMessage                                            ...
                   (                                                         ...
                     functionName                                            ...
                   );
    %---------------------------------------------------------------------------
    %  Generate an usage   message.
    %---------------------------------------------------------------------------
       [                                                                     ...
         usageMessageString                                                  ...
       ] = generateUsageMessage                                              ...
                   (                                                         ...
                     functionName                                            ...
                   );
    %---------------------------------------------------------------------------
    %  Output a  purpose message.
    %---------------------------------------------------------------------------
       fprintf                                                               ...
         (                                                                   ...
           STDOUT,                                                           ...
           '%s',                                                             ...
           purposeMessageString                                              ...
         );
    %---------------------------------------------------------------------------
    %  Output an usage   message.
    %---------------------------------------------------------------------------
       fprintf                                                               ...
         (                                                                   ...
           STDOUT,                                                           ...
           '%s',                                                             ...
           usageMessageString                                                ...
         );
    %---------------------------------------------------------------------------
    %  Generate an error message.
    %---------------------------------------------------------------------------
       errorMessageFormattingString =                                        ...
            [                                                                ...
              '\n\n\n'                                                       ...
              '%s\n%s\n%s\n%s\n'                                             ...
              '%s%s%s\n'                                                     ...
              '%s\n%s\n%s\n'                                                 ...
              '%s%d\n'                                                       ...
              '%s%d\n'                                                       ...
              '%s\n%s\n%s\n%s\n%s\n'                                         ...
              '\n\n\n'                                                       ...
            ];
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       fprintf                                                               ...
       (                                                                     ...
         STDOUT,                                                             ...
         errorMessageFormattingString,                                       ...
         '----------------------------------------------------------------', ...
         '|',                                                                ...
         '| ERROR:',                                                         ...
         '|',                                                                ...
         '|   Function "',                                                   ...
         functionName,                                                       ...
         '"',                                                                ...
         '|',                                                                ...
         '|   Encountered unexpected number of input arguments.',            ...
         '|',                                                                ...
         '|   Expected number input  arguments:-->',                         ...
         expectedNumberInputArgs,                                            ...
         '|   Actual   number input  arguments:-->',                         ...
         actualNumberInputArgs,                                              ...
         '|',                                                                ...
         '|  This is an error.',                                             ...
         '|  The program will terminate.',                                   ...
         '|',                                                                ...
         '----------------------------------------------------------------'  ...
       );
    %---------------------------------------------------------------------------
       vectorProductResult = [ ];
    %---------------------------------------------------------------------------
    %  Terminate the program.
    %---------------------------------------------------------------------------
       error( 'Encountered unexpected number of input arguments.' );
    %}--------------------------------------------------------------------------
   end;
%-------------------------------------------------------------------------------
   return;
%}------------------------------------------------------------------------------


%===============================================================================
function                                                                     ...
[                                                                            ...
  purposeMessageString                                                       ...
] =                                                                          ...
generatePurposeMessage                                                       ...
        (                                                                    ...
          functionName                                                       ...
        )
%{------------------------------------------------------------------------------
   purposeMessageFormattingString =                                          ...
          [                                                                  ...
            '\n\n\n',                                                        ...
            '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                               ...
            '%s%s\n'                                                         ...
            '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                       ...
            '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                       ...
            '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                       ...
            '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                       ...
            '\n\n\n'                                                         ...
          ];
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   [                                                                         ...
     purposeMessageString                                                    ...
   ] =                                                                       ...
    sprintf                                                                  ...
     (                                                                       ...
       purposeMessageFormattingString,                                       ...
       '===================================================================',...
       '|',                                                                  ...
       '| UNCLASSIFIED',                                                     ...
       '|',                                                                  ...
       '|==================================================================',...
       '|',                                                                  ...
       '| FUNCTION:',                                                        ...
       '|',                                                                  ...
       '|   ',                                                               ...
       functionName,                                                     ...
       '|',                                                                  ...
       '|------------------------------------------------------------------',...
       '|',                                                                  ...
       '| PURPOSE:',                                                         ...
       '|',                                                                  ...
       '|   This function will compute the vector product of the specified', ...
       '|   two input one dimensional vectors of length 3.',                 ...
       '|',                                                                  ...
       '|------------------------------------------------------------------',...
       '|',                                                                  ...
       '| INPUT(s):',                                                        ...
       '|',                                                                  ...
       '|   inputVector1',                                                   ...
       '|     The first  input one dimensional vector of length 3.',         ...
       '|',                                                                  ...
       '|   inputVector2',                                                   ...
       '|     The second input one dimensional vector of length 3.',         ...
       '|',                                                                  ...
       '|------------------------------------------------------------------',...
       '|',                                                                  ...
       '| OUTPUT(s):',                                                       ...
       '|',                                                                  ...
       '|   vectorProductResult',                                            ...
       '|     The vector product result as a one dimensional vector',        ...
       '|     of length 3.',                                                 ...
       '|',                                                                  ...
       '|------------------------------------------------------------------',...
       '|',                                                                  ...
       '| ASSUME:',                                                          ...
       '|',                                                                  ...
       '|   [ 1 ]  The input vectors are either both row or both column',    ...
       '|          vectors of length 3.',                                    ...
       '|',                                                                  ...
       '|   [ 2 ]  Output will be a column vector.',                         ...
       '|',                                                                  ...
       '|==================================================================',...
       '|',                                                                  ...
       '| UNCLASSIFIED',                                                     ...
       '|',                                                                  ...
       '===================================================================' ...
     );
%-------------------------------------------------------------------------------
   return;
%}------------------------------------------------------------------------------


%===============================================================================
function                                                                     ...
[                                                                            ...
  usageMessageString                                                         ...
] =                                                                          ...
generateUsageMessage                                                         ...
        (                                                                    ...
          functionName                                                       ...
        )
%{------------------------------------------------------------------------------
   usageMessageFormattingString =                                            ...
        [                                                                    ...
          '\n\n\n'                                                           ...
          '%s\n%s\n%s\n%s\n%s\n%s\n'                                         ...
          '%s%s%s\n'                                                         ...
          '%s\n%s\n%s\n%s\n%s\n%s\n'                                         ...
          '\n\n\n'                                                           ...
        ];
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   [                                                                         ...
     usageMessageString                                                      ...
   ] =                                                                       ...
    sprintf                                                                  ...
     (                                                                       ...
       usageMessageFormattingString,                                         ...
       '-------------------------------------------------------------------',...
       '|',                                                                  ...
       '| USAGE:',                                                           ...
       '|',                                                                  ...
       '|   [                                  ...',                         ...
       '|     vectorProductResult              ...',                         ...
       '|   ] = ',                                                           ...
       functionName,                                                         ...
       '        ...',                                                        ...
       '|             (                        ...',                         ...
       '|               inputVector1,          ...',                         ...
       '|               inputVector2           ...',                         ...
       '|             );',                                                   ...
       '|',                                                                  ...
       '-------------------------------------------------------------------' ...
     );
%-------------------------------------------------------------------------------
   return;
%}------------------------------------------------------------------------------


%===============================================================================
%
%  UNCLASSIFIED
%
%===============================================================================
